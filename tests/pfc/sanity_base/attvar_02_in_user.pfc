#!/usr/bin/env swipl
%
%  PFC is a language extension for prolog.. there is so much that can be done in this language extension to Prolog
%
% Dec 13, 2035
% Douglas Miles

:- include(test_header).

:- set_file_abox_module(user).

:- ensure_loaded(library(attvar_reader)).

% Tests Non-module Forward chaining of assertable attributed variables



:- debug_logicmoo(_).
:- nodebug_logicmoo(http(_)).
:- debug_logicmoo(logicmoo(_)).
 % :- mpred_trace_exec.
% :- process_this_script.

:- dynamic(sk2_out/1).
:- dynamic(sk2_in/1).

:- begin_pfc.

:- read_attvars(true).

:- assert_u(sk2_in(avar([vn='Ex',sk2='SKF-666']))).
:- listing_u(sk2_in/1).
:- must(clause_asserted_i(sk2_in(avar([vn='Ex',sk2='SKF-666'])))).
:- abolish(sk2_in/1).

:- with_fc_mode(zdirect,must((get_fc_mode(xx,(xxxf,ax),DMode),DMode=zdirect))).

sk2_in(avar([vn='Ex',sk2='SKF-666'])).

sk2_in(Ex)==>sk2_out(Ex).


:- ((sk2_out(Ex),get_attr(Ex,sk2,What),What='SKF-666')).




